{"version":3,"sources":["Projects/color-data.js","Projects/context.js","Projects/Start.js","Projects/Color.js","Projects/Color-Data.js","Projects/form.js","Projects/Color-App.js","index.js"],"names":["Data","id","title","color","rating","ColorContext","createContext","AppProvider","children","hex","useState","colors","setColors","colorsH1","setColorsH1","colorsH2","setColorsH2","setRandomHeaderColor","ourColors","forEach","element","push","func1","func2","hexColor1","hexColor2","i","getRandomN","randomColor","Math","floor","random","length","useEffect","colorChange","setInterval","clearInterval","Provider","value","vanish","document","getElementById","classList","add","useGlobalContext","useContext","Star","selected","onSelect","f","onClick","StarRating","totalStars","selectedStars","onRate","Array","map","n","Color","onRemove","disapearing","setTimeout","clearTimeout","style","className","height","backgroundColor","ColorList","onRemoveColor","onRateColor","Form","newColor","setColor","txtTitle","useRef","hexColor","onSubmit","e","preventDefault","text","current","inputColor","form","querySelector","reset","htmlFor","ref","type","placeholder","required","onChange","target","App","newColors","filter","colorObj","Date","valueOf","ReactDOM","render"],"mappings":"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","file":"static/js/main.9b97614a.chunk.js","sourcesContent":["let Data = [\n  {\n    id: '0175d1f0-a8c6-41bf-8d02-df5734d829a4',\n    title: 'ocean at dusk',\n    color: '#00c4e2',\n    rating: 5,\n  },\n  {\n    id: '83c7ba2f-7392-4d7d-9e23-35adbe186046',\n    title: 'lawn',\n    color: '#26ac56',\n    rating: 3,\n  },\n  {\n    id: 'a11e3995-b0bd-4d58-8c48-5e49ae7f7f23',\n    title: 'bright red',\n    color: '#ff0000',\n    rating: 0,\n  },\n];\nexport default Data;\n","import React, { useState, useContext, createContext, useEffect } from 'react';\n\nimport color from './color-data';\nconst ColorContext = createContext();\nconst AppProvider = ({ children }) => {\n  const hex = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 'A', 'B', 'C', 'D', 'E', 'F'];\n  const [colors, setColors] = useState(color);\n  const [colorsH1, setColorsH1] = useState('');\n  const [colorsH2, setColorsH2] = useState('');\n  const randomColor = (func1, func2) => {\n    let hexColor1 = '#';\n    let hexColor2 = '#';\n    for (let i = 0; i < 6; i++) {\n      hexColor1 += hex[getRandomN()];\n      hexColor2 += hex[getRandomN()];\n    }\n    func1(hexColor1);\n    func2(hexColor2);\n  };\n  const setRandomHeaderColor = () => {\n    let ourColors = [];\n    colors.forEach((element) => {\n      ourColors.push(element.color);\n    });\n    randomColor(setColorsH1, setColorsH2);\n  };\n  function getRandomN() {\n    return Math.floor(Math.random() * hex.length);\n  }\n  useEffect(() => {\n    const colorChange = setInterval(() => {\n      setRandomHeaderColor();\n    }, 3000);\n    return () => clearInterval(colorChange);\n  }, []);\n  const vanish = (id) => {\n    const outcast = document.getElementById(id);\n    outcast.classList.add('disappear');\n  };\n  return (\n    <ColorContext.Provider\n      value={{\n        colors,\n        setColors,\n        vanish,\n        colorsH1,\n        colorsH2,\n      }}\n    >\n      {children}\n    </ColorContext.Provider>\n  );\n};\nexport const useGlobalContext = () => {\n  return useContext(ColorContext);\n};\nexport { AppProvider, ColorContext };\n","import React, { useState } from 'react';\nimport { FaStar } from 'react-icons/fa';\n\nconst Star = ({ selected = false, onSelect = (f) => f }) => (\n  <FaStar color={selected ? 'red' : 'grey'} onClick={onSelect} />\n);\nconst createArray = (length) => [...Array(length)];\n// export default function StarRating({ totalStars = 5, style = {} }) {\n//   const [selectedStars, setSelectedStars] = useState(0);\n//   return (\n//     <div style={{ padding: '5px', ...style }} className=\"start-container\">\n//       {createArray(totalStars).map((n, i) => (\n//         <Star\n//           key={i}\n//           selected={selectedStars > i}\n//           onSelect={() => setSelectedStars(i + 1)}\n//         />\n//       ))}\n//       <p>\n//         {selectedStars} of {totalStars} stars\n//       </p>\n//     </div>\n//   );\n// }\nexport default function StarRating({\n  totalStars = 5,\n  selectedStars = 0,\n  onRate = (f) => f,\n}) {\n  return (\n    <>\n      {createArray(totalStars).map((n, i) => (\n        <Star\n          key={i}\n          selected={selectedStars > i}\n          onSelect={() => onRate(i + 1)}\n        />\n      ))}\n    </>\n  );\n}\n","import React, { useEffect } from 'react';\nimport { useGlobalContext } from './context';\nimport StarRating from './Start';\nimport { FaTrash } from 'react-icons/fa';\nexport default function Color({\n  id,\n  title,\n  color,\n  rating,\n  onRemove = (f) => f,\n  onRate = (f) => f,\n}) {\n  const { vanish } = useGlobalContext();\n  const disapearing = () => {\n    vanish(id);\n    setTimeout(() => {\n      onRemove(id);\n    }, 5000);\n  };\n  useEffect(() => {\n    return () => clearTimeout(disapearing);\n  }, [disapearing]);\n  return (\n    <section>\n      <h1 style={{ color: color }}>{title}</h1>\n      <div className=\"start-container\">\n        <button onClick={() => disapearing()}>\n          <FaTrash />\n        </button>\n      </div>\n      <div\n        style={{ height: 50, backgroundColor: color }}\n        className=\"appear\"\n        id={id}\n      />\n      <div className=\"start-container\">\n        <StarRating\n          selectedStars={rating}\n          onRate={(rating) => onRate(id, rating)}\n        />\n      </div>\n    </section>\n  );\n}\n","import React from 'react';\nimport { useGlobalContext } from './context';\nimport Color from './Color';\nexport default function ColorList({\n  onRemoveColor = (f) => f,\n  onRateColor = (f) => f,\n}) {\n  const { colors, colorsH1, colorsH2 } = useGlobalContext();\n  if (!colors.length) return <div>No Colors Listed.</div>;\n  return (\n    <div>\n      <h1 className=\"header\" style={{ color: colorsH1 }}>\n        My Color Reviewer App\n      </h1>\n      <h2 className=\"header\" style={{ color: colorsH2 }}>\n        Rate the colors, add and remove the ones you want\n      </h2>\n      {colors.map((color) => (\n        <Color\n          key={color.id}\n          {...color}\n          onRemove={onRemoveColor}\n          onRate={onRateColor}\n        />\n      ))}\n    </div>\n  );\n}\n","import React, { useState, useEffect, useRef } from 'react';\n\nconst Form = ({ newColor }) => {\n  const [color, setColor] = useState('');\n  const hex = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 'A', 'B', 'C', 'D', 'E', 'F'];\n  const txtTitle = useRef();\n  const hexColor = useRef();\n  const randomColor = () => {\n    let hexColor = '#';\n    for (let i = 0; i < 6; i++) {\n      hexColor += hex[getRandomN()];\n    }\n    setColor(hexColor);\n  };\n  function getRandomN() {\n    return Math.floor(Math.random() * hex.length);\n  }\n  useEffect(() => {\n    randomColor();\n  }, []);\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const text = txtTitle.current.value,\n      inputColor = hexColor.current.value,\n      form = document.querySelector('.color-form');\n    newColor(text, inputColor);\n    form.reset();\n    randomColor();\n  };\n  return (\n    <form className=\"color-form\" onSubmit={handleSubmit}>\n      <legend>Put New Colors on The Form</legend>\n      <label htmlFor=\"color-name\">Color Name</label>\n      <input\n        ref={txtTitle}\n        type=\"text\"\n        id=\"color-name\"\n        placeholder={color}\n        required\n      />\n      <label htmlFor=\"color\">The Color Itself</label>\n      <input\n        ref={hexColor}\n        type=\"color\"\n        id=\"color\"\n        value={color}\n        onChange={(e) => setColor(e.target.value)}\n        required\n      />\n      <button>New Color</button>\n    </form>\n  );\n};\nexport default Form;\n","import React from 'react';\nimport { useGlobalContext } from './context';\nimport ColorList from './Color-Data';\nimport Form from './form';\nexport default function App() {\n  const { colors, setColors } = useGlobalContext();\n  const newColor = (title, color) => {\n    const id = new Date().valueOf(),\n      rating = randow5(),\n      colorObj = {\n        title,\n        color,\n        id,\n        rating,\n      },\n      setColor = [...colors, colorObj];\n    setColors(setColor);\n  };\n  function randow5() {\n    return Math.floor(Math.random() * 5);\n  }\n  return (\n    <>\n      <ColorList\n        colors={colors}\n        onRemoveColor={(id) => {\n          const newColors = colors.filter((color) => color.id !== id);\n          setColors(newColors);\n        }}\n        onRateColor={(id, rating) => {\n          const newColors = colors.map((color) =>\n            color.id === id ? { ...color, rating } : color\n          );\n          setColors(newColors);\n        }}\n      />\n      <Form newColor={newColor} />\n    </>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './normalize.css';\nimport './index.css';\nimport { AppProvider } from './Projects/context';\nimport Start from './Projects/Color-App';\n\nReactDOM.render(\n  <AppProvider>\n    <Start />\n  </AppProvider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}